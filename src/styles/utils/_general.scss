.flex {
  display: flex;

  &.even-columns > * {
    width: 100%;
  }


  &-col {
    @include createResponsiveClasses {
      flex-direction: column;
    }

    &-reverse {
      @include createResponsiveClasses {
        flex-direction: column-reverse;
      }
    }
  }

  &-row {
    @include createResponsiveClasses {
      flex-direction: row;
    }
  }

  &-wrap {
    flex-wrap: wrap;
  }
}

.grow {
  &-1 {
    flex-grow: 1;
  }
}

.items {
  &-center {
    align-items: center;
  }

  &-end {
    align-items: end;
  }

  &-start {
    align-items: start;
  }
}

.justify {
  &-center {
    justify-content: center;
  }

  &-end {
    justify-content: end;
  }

  &-start {
    justify-content: start;
  }

  &-between {
    justify-content: space-between;
  }
}

.align-self {
  &-center {
    align-self: center;
  }
}

.justify-self {
  &-center {
    justify-self: center;
  }
}

.grid {
  @include createResponsiveClasses {
    display: grid;
    gap: var(--gap, 1rem);
  }
}

.col {
  &-2 {
    @include createResponsiveClasses {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  &-3 {
    @include createResponsiveClasses {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}

.d {
  &-block {
    @include createResponsiveClasses {
      display: block;
    }
  }
}

.hidden {
  @include createResponsiveClasses {
    display: none
  }
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.overflow {
  &-hidden {
    overflow: hidden;

    &-x {
      overflow-x: hidden;
    }

    &-y {
      overflow-y: hidden;
    }
  }
}

// positions

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.b {
  &-0 {
    @include createResponsiveClasses {
      bottom: 0;
    }
  }
}

.z-index {
  &-1 {
    z-index: 1;
  }

  &-2 {
    z-index: 2;
  }

  &-3 {
    z-index: 3;
  }

  &-4 {
    z-index: 4;
  }

  &-5 {
    z-index: 5;
  }

  &-10 {
    z-index: 10;
  }
}

// border

.rounded {
  border-radius: 0.25rem;

  &-2 {
    border-radius: 0.5rem;
  }

  &-2-5 {
    border-radius: 10px;
  }
}

// list styles
.list-style-none {
  list-style-type: none;
}

.decimal {
  list-style-type: decimal;
}

// animations
.animation {
  &-linear {
    animation-timing-function: linear;
  }
}

@keyframes fade-up {
  from {
    transform: translateY(80px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.fadeInUp {
  opacity: 0;
  animation: fade-up 1s forwards cubic-bezier(.2, 2, .4, 1);
}

.delay {
  &-100 {
    animation-delay: 100ms;
  }

  &-150 {
    animation-delay: 150ms;
  }

  &-200 {
    animation-delay: 200ms;
  }

  &-250 {
    animation-delay: 250ms;
  }

  &-300 {
    animation-delay: 300ms;
  }

  &-350 {
    animation-delay: 350ms;
  }

  &-400 {
    animation-delay: 400ms;
  }

  &-450 {
    animation-delay: 450ms;
  }

  &-500 {
    animation-delay: 500ms;
  }

  &-550 {
    animation-delay: 550ms;
  }

  &-600 {
    animation-delay: 600ms;
  }

  &-650 {
    animation-delay: 650ms;
  }

  &-700 {
    animation-delay: 700ms;
  }

  &-750 {
    animation-delay: 750ms;
  }

  &-800 {
    animation-delay: 800ms;
  }
}